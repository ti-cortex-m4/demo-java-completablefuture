public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.acceptEither(java.util.concurrent.CompletionStage,java.util.function.Consumer)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.acceptEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Consumer)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.acceptEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Consumer,java.util.concurrent.Executor)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.applyToEither(java.util.concurrent.CompletionStage,java.util.function.Function)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.applyToEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Function,java.util.concurrent.Executor)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.applyToEitherAsync(java.util.concurrent.CompletionStage,java.util.function.Function)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.exceptionally(java.util.function.Function)
public default java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.exceptionallyAsync(java.util.function.Function)
public default java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.exceptionallyAsync(java.util.function.Function,java.util.concurrent.Executor)
public default java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.exceptionallyCompose(java.util.function.Function)
public default java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.exceptionallyComposeAsync(java.util.function.Function)
public default java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.exceptionallyComposeAsync(java.util.function.Function,java.util.concurrent.Executor)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.handle(java.util.function.BiFunction)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.handleAsync(java.util.function.BiFunction,java.util.concurrent.Executor)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.handleAsync(java.util.function.BiFunction)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.runAfterBoth(java.util.concurrent.CompletionStage,java.lang.Runnable)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.runAfterBothAsync(java.util.concurrent.CompletionStage,java.lang.Runnable)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.runAfterBothAsync(java.util.concurrent.CompletionStage,java.lang.Runnable,java.util.concurrent.Executor)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.runAfterEither(java.util.concurrent.CompletionStage,java.lang.Runnable)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.runAfterEitherAsync(java.util.concurrent.CompletionStage,java.lang.Runnable,java.util.concurrent.Executor)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.runAfterEitherAsync(java.util.concurrent.CompletionStage,java.lang.Runnable)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenAccept(java.util.function.Consumer)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenAcceptAsync(java.util.function.Consumer)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenAcceptAsync(java.util.function.Consumer,java.util.concurrent.Executor)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenAcceptBoth(java.util.concurrent.CompletionStage,java.util.function.BiConsumer)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenAcceptBothAsync(java.util.concurrent.CompletionStage,java.util.function.BiConsumer,java.util.concurrent.Executor)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenAcceptBothAsync(java.util.concurrent.CompletionStage,java.util.function.BiConsumer)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenApply(java.util.function.Function)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenApplyAsync(java.util.function.Function,java.util.concurrent.Executor)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenApplyAsync(java.util.function.Function)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenCombine(java.util.concurrent.CompletionStage,java.util.function.BiFunction)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenCombineAsync(java.util.concurrent.CompletionStage,java.util.function.BiFunction)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenCombineAsync(java.util.concurrent.CompletionStage,java.util.function.BiFunction,java.util.concurrent.Executor)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenCompose(java.util.function.Function)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenComposeAsync(java.util.function.Function)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenComposeAsync(java.util.function.Function,java.util.concurrent.Executor)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenRun(java.lang.Runnable)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenRunAsync(java.lang.Runnable,java.util.concurrent.Executor)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.thenRunAsync(java.lang.Runnable)
public abstract java.util.concurrent.CompletableFuture java.util.concurrent.CompletionStage.toCompletableFuture()
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.whenComplete(java.util.function.BiConsumer)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.whenCompleteAsync(java.util.function.BiConsumer)
public abstract java.util.concurrent.CompletionStage java.util.concurrent.CompletionStage.whenCompleteAsync(java.util.function.BiConsumer,java.util.concurrent.Executor)
